name: 'Update GitHub Release'
description: 'Updates the GitHub release notes based on deployment environment'
inputs:
  tagName:
    description: 'Tag of the release to update'
    required: true
  environment:
    description: 'Environment to which the code was deployed'
    required: true
  github-token:
    description: 'GitHub token for CLI operations'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
      with:
        token: ${{ inputs.github-token }}
    - name: Update Release Notes and Status
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        TAG_NAME=${{ inputs.tagName }}
        ENVIRONMENT=${{ inputs.environment }}
        # Fetch the current release notes
        CURRENT_NOTES=$(gh release view "$TAG_NAME" --json body -q .body)
        # Prepare the new release notes content
        if [[ "$CURRENT_NOTES" != *"$ENVIRONMENT"* ]]; then
        NEW_NOTES="${CURRENT_NOTES}
        Deployed to ${ENVIRONMENT}"
        else
        NEW_NOTES="${CURRENT_NOTES}"
        fi
        # Check the environment and update the release accordingly
        if [ "$ENVIRONMENT" == "qa" ]; then
        # If deployed to QA, update the release notes and remove the pre-release status
        gh release edit "$TAG_NAME" --notes "$NEW_NOTES" --prerelease=false
        #  gh release edit "$TAG_NAME" --discussion-category "Releases"
        elif [ "$ENVIRONMENT" == "prod" ]; then
        # If deployed to prod, update the release notes, remove pre-release status, and set as the latest release
        gh release edit "$TAG_NAME" --notes "$NEW_NOTES" --draft=false --latest
        else
        # If environment is not QA or prod and the environment info is new, just update the release notes and keep it as pre-release
        if [[ "$NEW_NOTES" != "$CURRENT_NOTES" ]]; then
        gh release edit "$TAG_NAME" --notes "$NEW_NOTES" --prerelease
        else
        echo "The release notes already mention the environment ${ENVIRONMENT}, and no status changes are required."
        fi
        fi
